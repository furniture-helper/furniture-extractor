name: Fetch All Products
on:
  schedule:
    - cron: '0 */6 * * *'
  workflow_dispatch:

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      queries: ${{ steps.set-queries.outputs.queries }}
    steps:
      - uses: actions/checkout@v4
      - name: Cache node_modules
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            dist
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
      - name: Install dependencies
        run: npm install
      - name: Install Playwright dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
          libgtk-4-1 libgraphene-1.0-0 libwoff1 libvpx9 libevent-2.1-7 libopus0 \
          libgstallocators-1.0-0 libgstapp-1.0-0 libgstpbutils-1.0-0 libgstaudio-1.0-0 \
          libgsttag-1.0-0 libgstvideo-1.0-0 libgstgl-1.0-0 libgstcodecparsers-1.0-0 \
          libgstfft-1.0-0 libflite1 libflite1 libflite1 libflite1 libflite1 libflite1 \
          libflite1 libflite1 libflite1 libflite1 libflite1 libflite1 libflite1 \
          libavif16 libharfbuzz-icu0 libsecret-1-0 libhyphen0 libmanette-0.2-0 \
          libgles2 libx264-155
      - name: Install Playwright
        run: npx playwright install
      - name: Build project
        run: npm run build
      - name: Read queries.json
        id: set-queries
        run: echo "queries=$(jq -c . queries.json)" >> $GITHUB_OUTPUT

  fetch-products:
    needs: setup
    runs-on: ubuntu-latest
    strategy:
      matrix:
        query: ${{ fromJson(needs.setup.outputs.queries) }}
    steps:
      - uses: actions/checkout@v4
      - name: Restore cache
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            dist
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
      - name: Fetch products for ${{ matrix.query.query }}
        run: node dist/index.js --query="${{ matrix.query.query }}" --lower=${{ matrix.query.lower }} --upper=${{ matrix.query.upper }}
      - name: Upload debug and output artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: |
            debug
            output